{"version":3,"sources":["../node_modules/@aws-amplify/ui-components/dist/esm-es5 lazy /^/.*/.entry/.js$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","graphql/mutations.js","graphql/queries.js","App.js","serviceWorker.js","aws-exports.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","createTodo","listTodos","initialState","name","description","styles","container","width","margin","display","flex","flexDirection","justifyContent","padding","todo","marginBottom","input","border","backgroundColor","fontSize","todoName","fontWeight","todoDescription","button","color","outline","withAuthenticator","useState","formState","setFormState","todos","setTodos","setInput","key","value","a","API","graphql","graphqlOperation","todoData","data","items","console","log","useEffect","fetchTodos","style","onChange","event","target","placeholder","onClick","index","Boolean","window","location","hostname","match","awsmobile","Amplify","configure","awsExports","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.543a3ec9.chunk.js","sourcesContent":["var map = {\n\t\"./amplify-amazon-button_5.entry.js\": [\n\t\t206,\n\t\t7\n\t],\n\t\"./amplify-auth-fields_9.entry.js\": [\n\t\t207,\n\t\t8\n\t],\n\t\"./amplify-authenticator.entry.js\": [\n\t\t208,\n\t\t9\n\t],\n\t\"./amplify-button_3.entry.js\": [\n\t\t209,\n\t\t10\n\t],\n\t\"./amplify-checkbox.entry.js\": [\n\t\t210,\n\t\t11\n\t],\n\t\"./amplify-confirm-sign-in_8.entry.js\": [\n\t\t211,\n\t\t12\n\t],\n\t\"./amplify-container.entry.js\": [\n\t\t212,\n\t\t13\n\t],\n\t\"./amplify-federated-buttons_2.entry.js\": [\n\t\t213,\n\t\t14\n\t],\n\t\"./amplify-federated-sign-in.entry.js\": [\n\t\t214,\n\t\t15\n\t],\n\t\"./amplify-form-field_4.entry.js\": [\n\t\t215,\n\t\t16\n\t],\n\t\"./amplify-greetings.entry.js\": [\n\t\t216,\n\t\t17\n\t],\n\t\"./amplify-icon-button.entry.js\": [\n\t\t217,\n\t\t18\n\t],\n\t\"./amplify-icon.entry.js\": [\n\t\t218,\n\t\t4\n\t],\n\t\"./amplify-link.entry.js\": [\n\t\t219,\n\t\t19\n\t],\n\t\"./amplify-nav_2.entry.js\": [\n\t\t220,\n\t\t20\n\t],\n\t\"./amplify-radio-button_2.entry.js\": [\n\t\t221,\n\t\t21\n\t],\n\t\"./amplify-select-mfa-type.entry.js\": [\n\t\t222,\n\t\t22\n\t],\n\t\"./amplify-sign-in-button.entry.js\": [\n\t\t223,\n\t\t5\n\t],\n\t\"./amplify-tooltip.entry.js\": [\n\t\t224,\n\t\t23\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 201;\nmodule.exports = webpackAsyncContext;","/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const createTodo = /* GraphQL */ `\n  mutation CreateTodo(\n    $input: CreateTodoInput!\n    $condition: ModelTodoConditionInput\n  ) {\n    createTodo(input: $input, condition: $condition) {\n      id\n      name\n      description\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const updateTodo = /* GraphQL */ `\n  mutation UpdateTodo(\n    $input: UpdateTodoInput!\n    $condition: ModelTodoConditionInput\n  ) {\n    updateTodo(input: $input, condition: $condition) {\n      id\n      name\n      description\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const deleteTodo = /* GraphQL */ `\n  mutation DeleteTodo(\n    $input: DeleteTodoInput!\n    $condition: ModelTodoConditionInput\n  ) {\n    deleteTodo(input: $input, condition: $condition) {\n      id\n      name\n      description\n      createdAt\n      updatedAt\n    }\n  }\n`;\n","/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const getTodo = /* GraphQL */ `\n  query GetTodo($id: ID!) {\n    getTodo(id: $id) {\n      id\n      name\n      description\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listTodos = /* GraphQL */ `\n  query ListTodos(\n    $filter: ModelTodoFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listTodos(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        name\n        description\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\n","/* src/App.js */\r\nimport React, { useEffect, useState } from 'react'\r\nimport { API, graphqlOperation } from 'aws-amplify'\r\nimport { createTodo } from './graphql/mutations'\r\nimport { listTodos } from './graphql/queries'\r\nimport {withAuthenticator} from '@aws-amplify/ui-react'\r\n\r\nconst initialState = { name: '', description: '' }\r\n\r\nconst App = () => {\r\n  const [formState, setFormState] = useState(initialState)\r\n  const [todos, setTodos] = useState([])\r\n\r\n  useEffect(() => {\r\n    fetchTodos()\r\n  }, [])\r\n\r\n  function setInput(key, value) {\r\n    setFormState({ ...formState, [key]: value })\r\n  }\r\n\r\n  async function fetchTodos() {\r\n    try {\r\n      const todoData = await API.graphql(graphqlOperation(listTodos))\r\n      const todos = todoData.data.listTodos.items\r\n      setTodos(todos)\r\n    } catch (err) { console.log('error fetching todos') }\r\n  }\r\n\r\n  async function addTodo() {\r\n    try {\r\n      if (!formState.name || !formState.description) return\r\n      const todo = { ...formState }\r\n      setTodos([...todos, todo])\r\n      setFormState(initialState)\r\n      await API.graphql(graphqlOperation(createTodo, {input: todo}))\r\n    } catch (err) {\r\n      console.log('error creating todo:', err)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h2>Amplify Todos</h2>\r\n      <input\r\n        onChange={event => setInput('name', event.target.value)}\r\n        style={styles.input}\r\n        value={formState.name} \r\n        placeholder=\"Name\"\r\n      />\r\n      <input\r\n        onChange={event => setInput('description', event.target.value)}\r\n        style={styles.input}\r\n        value={formState.description}\r\n        placeholder=\"Description\"\r\n      />\r\n      <button style={styles.button} onClick={addTodo}>Create Todo</button>\r\n      {\r\n        todos.map((todo, index) => (\r\n          <div key={todo.id ? todo.id : index} style={styles.todo}>\r\n            <p style={styles.todoName}>{todo.name}</p>\r\n            <p style={styles.todoDescription}>{todo.description}</p>\r\n          </div>\r\n        ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nconst styles = {\r\n  container: { width: 400, margin: '0 auto', display: 'flex', flex: 1, flexDirection: 'column', justifyContent: 'center', padding: 20 },\r\n  todo: {  marginBottom: 15 },\r\n  input: { border: 'none', backgroundColor: '#ddd', marginBottom: 10, padding: 8, fontSize: 18 },\r\n  todoName: { fontSize: 20, fontWeight: 'bold' },\r\n  todoDescription: { marginBottom: 0 },\r\n  button: { backgroundColor: 'black', color: 'white', outline: 'none', fontSize: 18, padding: '12px 0px' }\r\n}\r\n\r\nexport default withAuthenticator(App)","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","/* eslint-disable */\n// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-east-1\",\n    \"aws_appsync_graphqlEndpoint\": \"https://dowf7hr66fcvzelmqopk4def64.appsync-api.us-east-1.amazonaws.com/graphql\",\n    \"aws_appsync_region\": \"us-east-1\",\n    \"aws_appsync_authenticationType\": \"API_KEY\",\n    \"aws_appsync_apiKey\": \"da2-fgyb4r3v4ndado4bwmks5f7pi4\",\n    \"aws_cognito_identity_pool_id\": \"us-east-1:16967257-6421-4a37-9d2d-555cc4241a1e\",\n    \"aws_cognito_region\": \"us-east-1\",\n    \"aws_user_pools_id\": \"us-east-1_3ArKWFKou\",\n    \"aws_user_pools_web_client_id\": \"5fq16m8fmmjm5dcukbfer89tdg\",\n    \"oauth\": {}\n};\n\n\nexport default awsmobile;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Amplify from \"aws-amplify\";\r\nimport awsExports from \"./aws-exports\";\r\nAmplify.configure(awsExports);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}